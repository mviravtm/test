{"version":3,"sources":["../source/formatIncompletePhoneNumber.js"],"names":["AsYouType","formatIncompletePhoneNumber","value","country","metadata","options","formatter","number","input","template"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA;;;;;;;;AAQA,eAAe,SAASC,2BAAT,CAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,QAArD,EAA+DC,OAA/D,EACf;AACC;AACA,KAAMC,YAAY,IAAIN,SAAJ,CAAcG,OAAd,EAAuBC,QAAvB,CAAlB;;AAEA;AACA,KAAMG,SAASD,UAAUE,KAAV,CAAgBN,KAAhB,CAAf;;AAEA;AACA,KAAIG,WAAWA,QAAQI,QAAvB,EACA;AACC,SAAO,EAAEF,cAAF,EAAUE,UAAUH,UAAUG,QAA9B,EAAP;AACA;;AAED,QAAOF,MAAP;AACA","file":"formatIncompletePhoneNumber.js","sourcesContent":["import AsYouType from './AsYouType'\r\n\r\n/**\r\n * Formats a (possibly incomplete) phone number.\r\n * The phone number can be either in E.164 format\r\n * or in a form of national number digits.\r\n * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.\r\n * @param {string?} country - Two-letter (\"ISO 3166-1 alpha-2\") country code.\r\n * @return {object} `{ text : string, template : string }`. `text` is the formatted `value`. `template` is `text` where all characters of `value` are replaced with `x`-es.\r\n */\r\nexport default function formatIncompletePhoneNumber(value, country, metadata, options)\r\n{\r\n\t// \"As you type\" formatter.\r\n\tconst formatter = new AsYouType(country, metadata)\r\n\r\n\t// Format the number.\r\n\tconst number = formatter.input(value)\r\n\r\n\t// Return the formatting template if requested.\r\n\tif (options && options.template)\r\n\t{\r\n\t\treturn { number, template: formatter.template }\r\n\t}\r\n\r\n\treturn number\r\n}"]}