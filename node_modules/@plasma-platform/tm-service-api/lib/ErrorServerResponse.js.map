{"version":3,"sources":["../source/ErrorServerResponse.js"],"names":["ErrorServerResponse","statusCode","statusText","message","name","Error","captureStackTrace","stack"],"mappings":"o2BASqBA,oB,kBAUnB,6BAAYC,UAAZ,CAAwBC,UAAxB,CAAoD,IAAhBC,QAAgB,wDAAN,IAAM,2KAC5CA,OAD4C,SAElD,OAAKC,IAAL,CAAY,iBAFsC,CAGlD,MAAKH,UAAL,CAAkBA,UAHgC,CAIlD,MAAKC,UAAL,CAAkBA,UAJgC,CAKlD,MAAKC,OAAL,CAAeA,OALmC,CAM9CE,MAAMC,iBANwC,CAOhDD,MAAMC,iBAAN,OAA8BN,mBAA9B,CAPgD,CAShD,MAAKO,KAAL,CAAa,GAAIF,MAAJ,GAAYE,KATuB,MAWnD,C,kEArB8CF,K,kBAA5BL,mB","file":"ErrorServerResponse.js","sourcesContent":["/**\n * Custom error message for abstract server response\n *\n * @namespace ErrorServerResponse\n * @class\n * @param {number} statusCode - http status code\n * @param {string} statusText - http status code text\n * @param {string | null} [message = null] - error details\n */\nexport default class ErrorServerResponse extends Error {\n  /**\n   * Constructor generates error instance\n   * @memberof ErrorServerResponse\n   * @constructor\n   * @param {number} statusCode - http status code\n   * @param {string} statusText - http status code text\n   * @param {string | null} [message = null] - error details\n   * @return {ErrorServerResponse} - current instance\n   */\n  constructor(statusCode, statusText, message = null) {\n    super(message);\n    this.name = 'Server Response';\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    this.message = message;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorServerResponse);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n}\n"]}