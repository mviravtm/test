'use strict';Object.defineProperty(exports,'__esModule',{value:!0});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return call&&('object'==typeof call||'function'==typeof call)?call:self}function _inherits(subClass,superClass){if('function'!=typeof superClass&&null!==superClass)throw new TypeError('Super expression must either be null or a function, not '+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}var ErrorServerResponse=function(_Error){function ErrorServerResponse(statusCode,statusText){var message=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;_classCallCheck(this,ErrorServerResponse);var _this=_possibleConstructorReturn(this,(ErrorServerResponse.__proto__||Object.getPrototypeOf(ErrorServerResponse)).call(this,message));return _this.name='Server Response',_this.statusCode=statusCode,_this.statusText=statusText,_this.message=message,Error.captureStackTrace?Error.captureStackTrace(_this,ErrorServerResponse):_this.stack=new Error().stack,_this}return _inherits(ErrorServerResponse,_Error),ErrorServerResponse}(Error);exports.default=ErrorServerResponse;
//# sourceMappingURL=ErrorServerResponse.js.map