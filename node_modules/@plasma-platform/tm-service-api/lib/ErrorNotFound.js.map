{"version":3,"sources":["../source/ErrorNotFound.js"],"names":["ErrorNotFound","message","name","statusCode","statusText","Error","captureStackTrace","stack"],"mappings":"o2BAOqBA,c,kBAQnB,wBAA4B,IAAhBC,QAAgB,wDAAN,IAAM,yJACpBA,OADoB,SAE1B,OAAKC,IAAL,CAAY,WAFc,CAG1B,MAAKC,UAAL,CAAkB,GAHQ,CAI1B,MAAKC,UAAL,CAAkB,WAJQ,CAK1B,MAAKH,OAAL,CAAeA,OALW,CAMtBI,MAAMC,iBANgB,CAOxBD,MAAMC,iBAAN,OAA8BN,aAA9B,CAPwB,CASxB,MAAKO,KAAL,CAAa,GAAIF,MAAJ,GAAYE,KATD,MAW3B,C,sDAnBwCF,K,kBAAtBL,a","file":"ErrorNotFound.js","sourcesContent":["/**\n * Custom error message for Not Found server response\n *\n * @namespace ErrorNotFound\n * @class\n * @param {string | null} [message = null] - error details\n */\nexport default class ErrorNotFound extends Error {\n  /**\n   * Constructor generates error instance\n   * @memberof ErrorNotFound\n   * @constructor\n   * @param {string | null} [message = null] - error details\n   * @return {ErrorNotFound} - current instance\n   */\n  constructor(message = null) {\n    super(message);\n    this.name = 'Not Found';\n    this.statusCode = 404;\n    this.statusText = 'Not Found';\n    this.message = message;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorNotFound);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n}\n"]}