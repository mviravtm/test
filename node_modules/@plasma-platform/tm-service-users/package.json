{
  "_args": [
    [
      "@plasma-platform/tm-service-users@2.0.5-0",
      "/home/viram/Testing/Test"
    ]
  ],
  "_from": "@plasma-platform/tm-service-users@2.0.5-0",
  "_id": "@plasma-platform/tm-service-users@2.0.5-0",
  "_inBundle": false,
  "_integrity": "sha512-7Os6MUb5hslHi7sfaKZGuXgrPEOzRMUvV4Bl+gPmkyPK1WLL2Yj/HrKAbdBdF4VbHCT4eT2ct6mXo/+6DjoVug==",
  "_location": "/@plasma-platform/tm-service-users",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@plasma-platform/tm-service-users@2.0.5-0",
    "name": "@plasma-platform/tm-service-users",
    "escapedName": "@plasma-platform%2ftm-service-users",
    "scope": "@plasma-platform",
    "rawSpec": "2.0.5-0",
    "saveSpec": null,
    "fetchSpec": "2.0.5-0"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@plasma-platform/tm-service-users/-/tm-service-users-2.0.5-0.tgz",
  "_spec": "2.0.5-0",
  "_where": "/home/viram/Testing/Test",
  "author": {
    "name": "Anton Nemtsev",
    "email": "thesilentimp@gmail.com"
  },
  "contributors": [
    {
      "name": "Mirza Sergey",
      "email": "shaggrath@mail.ru"
    },
    {
      "name": "Kyrylo Voronoi",
      "email": "kyrylovoronoi@gmail.com"
    }
  ],
  "dependencies": {
    "@plasma-platform/tm-amazon-rename": "^1.0.11",
    "@plasma-platform/tm-service-api": "2.3.1-0",
    "babel-polyfill": "^6.26.0",
    "joi-browser": "^13.0.1",
    "urlencode": "^1.1.0"
  },
  "description": "Users Service API",
  "devDependencies": {
    "@plasma-platform/tm-message-hook": "^2.0.12",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^20.0.3",
    "babel-plugin-es6-promise": "^1.1.1",
    "babel-preset-env": "^1.6.1",
    "babel-preset-minify": "^0.2.0",
    "documentation": "^5.1.1",
    "enzyme": "^2.9.1",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^15.0.1",
    "eslint-config-prettier": "^2.4.0",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jest": "^21.0.2",
    "eslint-plugin-jsx-a11y": "^5.1.1",
    "eslint-plugin-prettier": "^2.2.0",
    "eslint-plugin-react": "^7.4.0",
    "jest": "^20.0.4",
    "jest-cli": "^20.0.4",
    "jest-enzyme": "^3.6.1",
    "lint-staged": "^4.1.3",
    "nock": "^9.0.14",
    "prettier": "^1.6.1",
    "react": "^15.6.1",
    "react-dom": "^15.6.1",
    "react-test-renderer": "^15.6.1"
  },
  "jest": {
    "automock": false,
    "collectCoverage": true,
    "collectCoverageFrom": [
      "!**/__mocks__/**",
      "!**/__tests__/**",
      "source/**.js"
    ],
    "moduleNameMapper": {
      "^.+\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|po)$": "<rootDir>/__mocks__/fileMock.js",
      "^.+\\.(css|less)$": "<rootDir>/__mocks__/styleMock.js"
    },
    "coverageDirectory": "./coverage/",
    "coverageReporters": [
      "clover",
      "json",
      "text"
    ],
    "setupTestFrameworkScriptFile": "./node_modules/jest-enzyme/lib/index.js",
    "unmockedModulePathPatterns": [],
    "moduleFileExtensions": [
      "js",
      "json"
    ]
  },
  "keywords": [
    "TM Micro Service",
    "Template Monster",
    "API"
  ],
  "license": "CC-BY-4.0",
  "lint-staged": {
    "source/*.{jsx,js}": [
      "npm run format",
      "eslint --color -f stylish --fix",
      "git add . -A",
      "jest --bail --findRelatedTests"
    ]
  },
  "main": "./lib/index.js",
  "name": "@plasma-platform/tm-service-users",
  "repository": {
    "type": "git",
    "url": "git@gitlab.com:TemplateMonster/PlasmaPlatform/Frontend/tm-service-dummy.git"
  },
  "scripts": {
    "build": "npm run build:dev",
    "build:dev": "babel source -s true -d lib --ignore __tests__/**,__mocks__/**",
    "build:doc": "documentation build source/*.js -o public -f html",
    "build:prod": "npm run clean && babel source --minified -s true -d lib --ignore __tests__/**,__mocks__/** && npm run build:doc && npm run build:readme",
    "build:readme": "documentation readme source/*.js -s 'Documentation'",
    "clean": "rimraf public lib",
    "commitmsg": "commit-msg ${GIT_PARAMS}",
    "dopremajor": "npm version premajor && npm publish --tag next --access public",
    "dopreminor": "npm version preminor && npm publish --tag next --access public",
    "doprepatch": "npm version prepatch && npm publish --tag next --access public",
    "format": "prettier --write --single-quote --print-width 100 --trailing-comma all 'source/**/*.{js,jsx}'",
    "lint": "eslint ./source/** --ext .jsx,.js --color -f stylish --fix",
    "major": "npm version major && npm publish --tag latest --access public",
    "minor": "npm version minor && npm publish --tag latest --access public",
    "patch": "npm version patch && npm publish --tag latest --access public",
    "postversion": "git push && git push --tags",
    "precommit": "git add . -A && lint-staged",
    "test": "jest",
    "version": "npm run build:prod && git add . -A",
    "watch": "babel source --watch -s true -d lib --ignore __tests__/**,__mocks__/**"
  },
  "version": "2.0.5-0"
}
