'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined}else{return get(parent,property,receiver)}}else if('value'in desc){return desc.value}else{var getter=desc.get;if(getter===undefined){return undefined}return getter.call(receiver)}};var _tmAmazonRename=require('@plasma-platform/tm-amazon-rename');var _tmAmazonRename2=_interopRequireDefault(_tmAmazonRename);var _tmServiceApi=require('@plasma-platform/tm-service-api');var _urlencode=require('urlencode');var _urlencode2=_interopRequireDefault(_urlencode);var _joiBrowser=require('joi-browser');var _joiBrowser2=_interopRequireDefault(_joiBrowser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}/**
 * Users Micro Service API
 *
 * @namespace UsersService
 * @module UsersService
 * @class
 * @exports
 * @param {string} url - service url
 * @param {string | null} [token = null] - user access tocken if available
 * @see http://service-users.templatemonster.com/doc/
 */var UsersService=function(_TMMicroServiceAPI){_inherits(UsersService,_TMMicroServiceAPI);/**
   * @description constructor of instance
   * @memberof ServiceProducts
   * @constructor
   * @public
   * @param {string} url - (required) url to service
   * @param {string} token  - user token
   * @example const service = new Service(url, token);
   * @return {object} - service SDK object
   *//**
   * user object
   *
   * @namespace UsersService
   * @typedef {user} user representation
   *
   * @property {string} userName - full name
   * @property {string} avatar - avatar url
   * @property {string} background - background color
   */function UsersService(){var _ref,_this2=this;_classCallCheck(this,UsersService);for(var _len=arguments.length,props=Array(_len),_key=0;_key<_len;_key++){props[_key]=arguments[_key]}/**
     * Object with class service messages
     * @type {object}
     */var _this=_possibleConstructorReturn(this,(_ref=UsersService.__proto__||Object.getPrototypeOf(UsersService)).call.apply(_ref,[this].concat(props)));_this.getUserById=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(userId){var schema,response,json;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:schema=_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required()});_joiBrowser2.default.validate({userId:userId},schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});_context.next=4;return _get(UsersService.prototype.__proto__||Object.getPrototypeOf(UsersService.prototype),'request',_this).call(_this,_this.url+'users/'+userId+'/profile');case 4:response=_context.sent;if(!response.ok){_context.next=10;break}_context.next=8;return response.json();case 8:json=_context.sent;return _context.abrupt('return',UsersService.updateURL(json));case 10:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 11:case'end':return _context.stop();}}},_callee,_this2)}));return function(_x){return _ref2.apply(this,arguments)}}();_this.getProfile=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,response,json;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:schema=_joiBrowser2.default.object().keys({data:_joiBrowser2.default.object()});_joiBrowser2.default.validate({data:data},schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});_context2.next=4;return _get(UsersService.prototype.__proto__||Object.getPrototypeOf(UsersService.prototype),'request',_this).call(_this,_this.url+'users/profile',{data:data});case 4:response=_context2.sent;if(!response.ok){_context2.next=10;break}_context2.next=8;return response.json();case 8:json=_context2.sent;return _context2.abrupt('return',UsersService.updateURL(json));case 10:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 11:case'end':return _context2.stop();}}},_callee2,_this2)}));return function(){return _ref3.apply(this,arguments)}}();_this.getListOfUsersAuthClient=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,users,responseHeaders,headers;return regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required().options({language:{root:'User id error -',key:'{{!label}} ',number:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}}),page:_joiBrowser2.default.number().integer()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context3.next=5;return _this.request(_this.url+'user-auth-clients/user/'+params.userId,options);case 5:response=_context3.sent;if(!response.ok){_context3.next=13;break}_context3.next=9;return response.json();case 9:users=_context3.sent;responseHeaders=response.headers;headers={totalCount:responseHeaders.has('X-Pagination-Total-Count')?responseHeaders.get('X-Pagination-Total-Count'):'0',pageCount:responseHeaders.has('X-Pagination-Page-Count')?responseHeaders.get('X-Pagination-Page-Count'):'0',currentPage:responseHeaders.has('X-Pagination-Current-Page')?responseHeaders.get('X-Pagination-Current-Page'):'1',perPage:responseHeaders.has('X-Pagination-Per-Page')?responseHeaders.get('X-Pagination-Per-Page'):'1'};return _context3.abrupt('return',{headers:headers,users:users});case 13:if(!(response.status===400)){_context3.next=15;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 15:if(!(response.status===404)){_context3.next=17;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 17:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 18:case'end':return _context3.stop();}}},_callee3,_this2)}));return function(){return _ref4.apply(this,arguments)}}();_this.linkAuthClientToUser=function(){var _ref5=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee4(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,options,response,json;return regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});schema=_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.string().required().options({language:{root:'User id error -',key:'{{!label}} ',string:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}}),client:_joiBrowser2.default.string().required().options({language:{root:'client error -',key:'{{!label}} ',string:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}})});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context4.next=6;return _this.request(_this.url+'user-auth-clients',options);case 6:response=_context4.sent;if(!response.ok){_context4.next=12;break}_context4.next=10;return response.json();case 10:json=_context4.sent;return _context4.abrupt('return',json);case 12:if(!(response.status===400)){_context4.next=14;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 14:if(!(response.status===404)){_context4.next=16;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 16:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 17:case'end':return _context4.stop();}}},_callee4,_this2)}));return function(){return _ref5.apply(this,arguments)}}();_this.requestAuthClientInformation=function(){var _ref6=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee5(userId){var options,response,json;return regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(userId,_joiBrowser2.default.number().integer().required().options({language:{root:'User id error -',key:'{{!label}} ',number:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:{}};_context5.next=5;return _this.request(_this.url+'user-auth-clients/'+userId,options);case 5:response=_context5.sent;if(!response.ok){_context5.next=11;break}_context5.next=9;return response.json();case 9:json=_context5.sent;return _context5.abrupt('return',json);case 11:if(!(response.status===400)){_context5.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context5.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context5.stop();}}},_callee5,_this2)}));return function(_x5){return _ref6.apply(this,arguments)}}();_this.unlinkAuthClientFromUser=function(){var _ref7=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee6(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response;return regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'DELETE',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context6.next=5;return _this.request(_this.url+'user-auth-clients/'+params.userId,options);case 5:response=_context6.sent;if(!response.ok){_context6.next=8;break}return _context6.abrupt('return',true);case 8:if(!(response.status===400)){_context6.next=10;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 10:if(!(response.status===404)){_context6.next=12;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 12:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 13:case'end':return _context6.stop();}}},_callee6,_this2)}));return function(){return _ref7.apply(this,arguments)}}();_this.getCitiesByIpAddresses=function(){var _ref8=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee7(){var arrayIps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var params,options,response,json;return regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_joiBrowser2.default.validate(arrayIps,_joiBrowser2.default.array().required().min(1).items(_joiBrowser2.default.string().regex(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)).options({language:{root:'Ips error -',key:'{{!label}} ',array:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)},string:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter),regex:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)}},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});params={};arrayIps.forEach(function(item,index){params['ips['+index+']']=item});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context7.next=6;return _this.request(_this.url+'cities/by-ips',options);case 6:response=_context7.sent;if(!response.ok){_context7.next=12;break}_context7.next=10;return response.json();case 10:json=_context7.sent;return _context7.abrupt('return',json);case 12:if(!(response.status===400)){_context7.next=14;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 14:if(!(response.status===404)){_context7.next=16;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 16:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 17:case'end':return _context7.stop();}}},_callee7,_this2)}));return function(){return _ref8.apply(this,arguments)}}();_this.getCitiesByZipAndCountryCode=function(){var _ref9=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee8(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,options,requestString,response,json;return regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:schema=_joiBrowser2.default.object().keys({zip:_joiBrowser2.default.string().required().regex(/\d/i).options({language:{root:'Zip error -',key:'{{!label}} ',string:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter),regex:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)}},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}}),countryCode:_joiBrowser2.default.string().regex(/^[a-zA-Z]{2}$/i).options({language:{root:'countryCode error -',key:'{{!label}} ',string:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter),regex:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)}}}})});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};requestString=!!params.countryCode?_this.url+'cities/by-zip/'+params.zip+'/'+params.countryCode:_this.url+'cities/by-zip/'+params.zip;_context8.next=6;return _this.request(requestString,options);case 6:response=_context8.sent;if(!response.ok){_context8.next=12;break}_context8.next=10;return response.json();case 10:json=_context8.sent;return _context8.abrupt('return',json);case 12:if(!(response.status===400)){_context8.next=14;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 14:if(!(response.status===404)){_context8.next=16;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 16:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 17:case'end':return _context8.stop();}}},_callee8,_this2)}));return function(){return _ref9.apply(this,arguments)}}();_this.getCitiesByZipCodes=function(){var _ref10=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee9(){var arrayZips=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var params,options,response,json;return regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_joiBrowser2.default.validate(arrayZips,_joiBrowser2.default.array().required().min(1).options({language:{root:'Zips error -',key:'{{!label}} ',array:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)},any:{required:new _tmServiceApi.ErrorBadRequest(_this.messages.noRequiredParameter)}}}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});params={};arrayZips.forEach(function(item,index){params['zips['+index+']']=item});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context9.next=6;return _this.request(_this.url+'cities/by-zips',options);case 6:response=_context9.sent;if(!response.ok){_context9.next=12;break}_context9.next=10;return response.json();case 10:json=_context9.sent;return _context9.abrupt('return',json);case 12:if(!(response.status===400)){_context9.next=14;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 14:if(!(response.status===404)){_context9.next=16;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 16:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 17:case'end':return _context9.stop();}}},_callee9,_this2)}));return function(){return _ref10.apply(this,arguments)}}();_this.getCityByIpAddress=function(){var _ref11=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee10(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,requestString,response,json;return regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({ip:_joiBrowser2.default.string().options({language:{root:'Ip error -',key:'{{!label}} ',string:{base:new _tmServiceApi.ErrorBadRequest(_this.messages.incorrectRequestParameter)}}})}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};requestString=!!params.ip?_this.url+'cities/by-ip/'+params.ip:_this.url+'cities/by-ip';_context10.next=5;return _this.request(requestString,options);case 5:response=_context10.sent;if(!response.ok){_context10.next=11;break}_context10.next=9;return response.json();case 9:json=_context10.sent;return _context10.abrupt('return',json);case 11:if(!(response.status===400)){_context10.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context10.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context10.stop();}}},_callee10,_this2)}));return function(){return _ref11.apply(this,arguments)}}();_this.getListOfCountries=function(){var _ref12=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee11(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context11.next=3;return _this.request(_this.url+'countries',options);case 3:response=_context11.sent;if(!response.ok){_context11.next=9;break}_context11.next=7;return response.json();case 7:json=_context11.sent;return _context11.abrupt('return',json);case 9:if(!(response.status===400)){_context11.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context11.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context11.stop();}}},_callee11,_this2)}));return function(){return _ref12.apply(this,arguments)}}();_this.getListOfSegmentOptions=function(){var _ref13=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee12(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context12.next=3;return _this.request(_this.url+'segment-options',options);case 3:response=_context12.sent;if(!response.ok){_context12.next=9;break}_context12.next=7;return response.json();case 7:json=_context12.sent;return _context12.abrupt('return',json);case 9:if(!(response.status===400)){_context12.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context12.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context12.stop();}}},_callee12,_this2)}));return function(){return _ref13.apply(this,arguments)}}();_this.getListOfSegments=function(){var _ref14=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee13(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context13.next=3;return _this.request(_this.url+'segments',options);case 3:response=_context13.sent;if(!response.ok){_context13.next=9;break}_context13.next=7;return response.json();case 7:json=_context13.sent;return _context13.abrupt('return',json);case 9:if(!(response.status===400)){_context13.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context13.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context13.stop();}}},_callee13,_this2)}));return function(){return _ref14.apply(this,arguments)}}();_this.getListOfStateProvinces=function(){var _ref15=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee14(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context14.next=3;return _this.request(_this.url+'state-provinces',options);case 3:response=_context14.sent;if(!response.ok){_context14.next=9;break}_context14.next=7;return response.json();case 7:json=_context14.sent;return _context14.abrupt('return',json);case 9:if(!(response.status===400)){_context14.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context14.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context14.stop();}}},_callee14,_this2)}));return function(){return _ref15.apply(this,arguments)}}();_this.addNewUser=function(){var _ref16=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee15(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,data,options,response,json;return regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:schema=_joiBrowser2.default.object().keys({login:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),password:_joiBrowser2.default.string(),subscription:_joiBrowser2.default.boolean(),locale:_joiBrowser2.default.string(),country:_joiBrowser2.default.string().regex(/^[A-Z]{2}$/i),state:_joiBrowser2.default.string().regex(/^[A-Z]{2}$/i),segmentOptionId:_joiBrowser2.default.number().integer()});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(!params.locale){data.locale='en'}if(params.segmentOptionId){data.segmentoption_id=params.segmentOptionId}else{data.segmentoption_id=4}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data))};_context15.next=8;return _this.request(_this.url+'users',options);case 8:response=_context15.sent;if(!response.ok){_context15.next=14;break}_context15.next=12;return response.json();case 12:json=_context15.sent;return _context15.abrupt('return',json);case 14:if(!(response.status===400)){_context15.next=16;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 16:if(!(response.status===404)){_context15.next=18;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 18:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 19:case'end':return _context15.stop();}}},_callee15,_this2)}));return function(){return _ref16.apply(this,arguments)}}();_this.confirmEmail=function(){var _ref17=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee16(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({token:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'PUT',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context16.next=4;return _this.request(_this.url+'users/confirm-email/'+params.token,options);case 4:response=_context16.sent;if(!response.ok){_context16.next=10;break}_context16.next=8;return response.json();case 8:json=_context16.sent;return _context16.abrupt('return',json);case 10:if(!(response.status===400)){_context16.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context16.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context16.stop();}}},_callee16,_this2)}));return function(){return _ref17.apply(this,arguments)}}();_this.getLinkForAvatarUpload=function(){var _ref18=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee17(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({file:_joiBrowser2.default.string().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context17.next=5;return _this.request(_this.url+'users/avatar/link',options);case 5:response=_context17.sent;if(!response.ok){_context17.next=11;break}_context17.next=9;return response.json();case 9:json=_context17.sent;return _context17.abrupt('return',json);case 11:if(!(response.status===400)){_context17.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context17.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context17.stop();}}},_callee17,_this2)}));return function(){return _ref18.apply(this,arguments)}}();_this.getListOfUsers=function(){var _ref19=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee18(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,response,users,responseHeaders,headers;return regeneratorRuntime.wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({page:_joiBrowser2.default.number().integer(),perPage:_joiBrowser2.default.number().integer()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(params.perPage){data['per-page']=params.perPage}options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},data)};_context18.next=7;return _this.request(_this.url+'users',options);case 7:response=_context18.sent;if(!response.ok){_context18.next=15;break}_context18.next=11;return response.json();case 11:users=_context18.sent;responseHeaders=response.headers;headers={totalCount:responseHeaders.has('X-Pagination-Total-Count')?responseHeaders.get('X-Pagination-Total-Count'):'0',pageCount:responseHeaders.has('X-Pagination-Page-Count')?responseHeaders.get('X-Pagination-Page-Count'):'0',currentPage:responseHeaders.has('X-Pagination-Current-Page')?responseHeaders.get('X-Pagination-Current-Page'):'1',perPage:responseHeaders.has('X-Pagination-Per-Page')?responseHeaders.get('X-Pagination-Per-Page'):'1'};return _context18.abrupt('return',{headers:headers,users:users});case 15:if(!(response.status===400)){_context18.next=17;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 17:if(!(response.status===404)){_context18.next=19;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 19:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 20:case'end':return _context18.stop();}}},_callee18,_this2)}));return function(){return _ref19.apply(this,arguments)}}();_this.getPaginationMetadata=function(){var _ref20=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee19(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,responseHeaders,headers;return regeneratorRuntime.wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:options={method:'HEAD',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context19.next=3;return _this.request(_this.url+'users',options);case 3:response=_context19.sent;if(!response.ok){_context19.next=8;break}responseHeaders=response.headers;headers={totalCount:responseHeaders.has('X-Pagination-Total-Count')?responseHeaders.get('X-Pagination-Total-Count'):'0',pageCount:responseHeaders.has('X-Pagination-Page-Count')?responseHeaders.get('X-Pagination-Page-Count'):'0',currentPage:responseHeaders.has('X-Pagination-Current-Page')?responseHeaders.get('X-Pagination-Current-Page'):'1',perPage:responseHeaders.has('X-Pagination-Per-Page')?responseHeaders.get('X-Pagination-Per-Page'):'1'};return _context19.abrupt('return',headers);case 8:if(!(response.status===400)){_context19.next=10;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 10:if(!(response.status===404)){_context19.next=12;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 12:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 13:case'end':return _context19.stop();}}},_callee19,_this2)}));return function(){return _ref20.apply(this,arguments)}}();_this.getSegmentOptionByToken=function(){var _ref21=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee20(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({segmentId:_joiBrowser2.default.number().integer().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context20.next=5;return _this.request(_this.url+'users/segment-option/'+params.segmentId,options);case 5:response=_context20.sent;if(!response.ok){_context20.next=11;break}_context20.next=9;return response.json();case 9:json=_context20.sent;return _context20.abrupt('return',json);case 11:if(!(response.status===400)){_context20.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context20.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context20.stop();}}},_callee20,_this2)}));return function(){return _ref21.apply(this,arguments)}}();_this.getSegmentOptionByUserId=function(){var _ref22=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee21(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required(),segmentId:_joiBrowser2.default.number().integer().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params,{user_id:params.userId,segment_id:params.segmentId})};_context21.next=5;return _this.request(_this.url+'users/user-segment-option/'+params.userId+'/'+params.segmentId,options);case 5:response=_context21.sent;if(!response.ok){_context21.next=11;break}_context21.next=9;return response.json();case 9:json=_context21.sent;return _context21.abrupt('return',json);case 11:if(!(response.status===400)){_context21.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context21.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context21.stop();}}},_callee21,_this2)}));return function(){return _ref22.apply(this,arguments)}}();_this.refreshToken=function(){var _ref23=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee22(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee22$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({refreshToken:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context22.next=4;return _this.request(_this.url+'users/refresh-token/'+params.refreshToken,options);case 4:response=_context22.sent;if(!response.ok){_context22.next=10;break}_context22.next=8;return response.json();case 8:json=_context22.sent;return _context22.abrupt('return',json);case 10:if(!(response.status===400)){_context22.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context22.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context22.stop();}}},_callee22,_this2)}));return function(){return _ref23.apply(this,arguments)}}();_this.loginProfile=function(){var _ref24=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee23(params){var schema,requestUrl,response,json;return regeneratorRuntime.wrap(function _callee23$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:schema=_joiBrowser2.default.object().keys({login:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),password:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string().required()});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});requestUrl=_this.url+'users/login';_context23.next=5;return _get(UsersService.prototype.__proto__||Object.getPrototypeOf(UsersService.prototype),'request',_this).call(_this,requestUrl,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))});case 5:response=_context23.sent;if(!response.ok){_context23.next=11;break}_context23.next=9;return response.json();case 9:json=_context23.sent;return _context23.abrupt('return',UsersService.updateURL(json));case 11:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 12:case'end':return _context23.stop();}}},_callee23,_this2)}));return function(_x23){return _ref24.apply(this,arguments)}}();_this.modifyAuthorizedUserInformation=function(){var _ref25=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee24(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,options,response,json;return regeneratorRuntime.wrap(function _callee24$(_context24){while(1){switch(_context24.prev=_context24.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});schema=_joiBrowser2.default.object().keys({password:_joiBrowser2.default.string(),firstname:_joiBrowser2.default.string(),lastname:_joiBrowser2.default.string(),phone:_joiBrowser2.default.string(),avatar:_joiBrowser2.default.string(),billingInfo:_joiBrowser2.default.array()});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'PUT',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context24.next=6;return _this.request(_this.url+'users/profile',options);case 6:response=_context24.sent;if(!response.ok){_context24.next=12;break}_context24.next=10;return response.json();case 10:json=_context24.sent;return _context24.abrupt('return',json);case 12:if(!(response.status===400)){_context24.next=14;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 14:if(!(response.status===404)){_context24.next=16;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 16:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 17:case'end':return _context24.stop();}}},_callee24,_this2)}));return function(){return _ref25.apply(this,arguments)}}();_this.modifyUserInformationByUserId=function(){var _ref26=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee25(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,options,response,json;return regeneratorRuntime.wrap(function _callee25$(_context25){while(1){switch(_context25.prev=_context25.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});schema=_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required(),firstname:_joiBrowser2.default.string(),lastname:_joiBrowser2.default.string(),phone:_joiBrowser2.default.string(),stateId:_joiBrowser2.default.number().integer(),billingInfo:_joiBrowser2.default.array()});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'PUT',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params,{state_id:params.stateId}))};_context25.next=6;return _this.request(_this.url+'users/'+params.userId,options);case 6:response=_context25.sent;if(!response.ok){_context25.next=12;break}_context25.next=10;return response.json();case 10:json=_context25.sent;return _context25.abrupt('return',json);case 12:if(!(response.status===400)){_context25.next=14;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 14:if(!(response.status===404)){_context25.next=16;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 16:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 17:case'end':return _context25.stop();}}},_callee25,_this2)}));return function(){return _ref26.apply(this,arguments)}}();_this.registerConfirmedUser=function(){var _ref27=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee26(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var schema,data,options,response,json;return regeneratorRuntime.wrap(function _callee26$(_context26){while(1){switch(_context26.prev=_context26.next){case 0:schema=_joiBrowser2.default.object().keys({login:_joiBrowser2.default.string().required(),password:_joiBrowser2.default.string().required(),country:_joiBrowser2.default.string().regex(/^[A-Z]{2}$/i),state:_joiBrowser2.default.string().regex(/^[A-Z]{2}$/i),firstname:_joiBrowser2.default.string(),lastname:_joiBrowser2.default.string(),birthday:_joiBrowser2.default.number(),phone:_joiBrowser2.default.string(),website:_joiBrowser2.default.string(),company:_joiBrowser2.default.string(),avatar:_joiBrowser2.default.string(),sex:_joiBrowser2.default.number(),expand:_joiBrowser2.default.string(),sendEmail:_joiBrowser2.default.boolean(),segmentOptionId:_joiBrowser2.default.number(),scope:_joiBrowser2.default.string(),billingInfo:_joiBrowser2.default.array()});_joiBrowser2.default.validate(params,schema,function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(params.segmentOptionId){data.segmentoption_id=params.segmentOptionId}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data))};_context26.next=7;return _this.request(_this.url+'users/register-confirmed',options);case 7:response=_context26.sent;if(!response.ok){_context26.next=13;break}_context26.next=11;return response.json();case 11:json=_context26.sent;return _context26.abrupt('return',json);case 13:if(!(response.status===400)){_context26.next=15;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 15:if(!(response.status===404)){_context26.next=17;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 17:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 18:case'end':return _context26.stop();}}},_callee26,_this2)}));return function(){return _ref27.apply(this,arguments)}}();_this.requestUserEmailExistInformation=function(){var _ref28=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee27(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee27$(_context27){while(1){switch(_context27.prev=_context27.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({email:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),expand:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context27.next=4;return _this.request(_this.url+'users/lookup/'+params.email,options);case 4:response=_context27.sent;if(!response.ok){_context27.next=10;break}_context27.next=8;return response.json();case 8:json=_context27.sent;return _context27.abrupt('return',json);case 10:if(!(response.status===400)){_context27.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context27.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context27.stop();}}},_callee27,_this2)}));return function(){return _ref28.apply(this,arguments)}}();_this.requestUserInformationByUserId=function(){var _ref29=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee28(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee28$(_context28){while(1){switch(_context28.prev=_context28.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context28.next=5;return _this.request(_this.url+'users/'+params.userId,options);case 5:response=_context28.sent;if(!response.ok){_context28.next=11;break}_context28.next=9;return response.json();case 9:json=_context28.sent;return _context28.abrupt('return',json);case 11:if(!(response.status===400)){_context28.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context28.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context28.stop();}}},_callee28,_this2)}));return function(){return _ref29.apply(this,arguments)}}();_this.requestChangeEmail=function(){var _ref30=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee29(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,response;return regeneratorRuntime.wrap(function _callee29$(_context29){while(1){switch(_context29.prev=_context29.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({email:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),locale:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(!params.locale){data.locale='en'}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data))};_context29.next=6;return _this.request(_this.url+'users/request-change-email',options);case 6:response=_context29.sent;if(!response.ok){_context29.next=9;break}return _context29.abrupt('return',true);case 9:if(!(response.status===400)){_context29.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context29.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context29.stop();}}},_callee29,_this2)}));return function(){return _ref30.apply(this,arguments)}}();_this.requestChangePasswordEmail=function(){var _ref31=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee30(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,response;return regeneratorRuntime.wrap(function _callee30$(_context30){while(1){switch(_context30.prev=_context30.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({email:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),password:_joiBrowser2.default.string().required(),locale:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(!params.locale){data.locale='en'}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data))};_context30.next=6;return _this.request(_this.url+'users/request-change-password/'+params.email,options);case 6:response=_context30.sent;if(!response.ok){_context30.next=9;break}return _context30.abrupt('return',true);case 9:if(!(response.status===400)){_context30.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context30.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context30.stop();}}},_callee30,_this2)}));return function(){return _ref31.apply(this,arguments)}}();_this.requestForPasswordResetEmail=function(){var _ref32=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee31(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,response;return regeneratorRuntime.wrap(function _callee31$(_context31){while(1){switch(_context31.prev=_context31.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({email:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),locale:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(!params.locale){data.locale='en'}options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},data)};_context31.next=6;return _this.request(_this.url+'users/request-reset-password/'+params.email,options);case 6:response=_context31.sent;if(!response.ok){_context31.next=9;break}return _context31.abrupt('return',true);case 9:if(!(response.status===400)){_context31.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context31.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context31.stop();}}},_callee31,_this2)}));return function(){return _ref32.apply(this,arguments)}}();_this.requestForRegistrationEmail=function(){var _ref33=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee32(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,response;return regeneratorRuntime.wrap(function _callee32$(_context32){while(1){switch(_context32.prev=_context32.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({email:_joiBrowser2.default.string().max(72).regex(/^.{1,64}@.{1,255}$/).regex(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).required(),locale:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(!params.locale){data.locale='en'}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data))};_context32.next=6;return _this.request(_this.url+'users/request-registration-email/'+params.email,options);case 6:response=_context32.sent;if(!response.ok){_context32.next=9;break}return _context32.abrupt('return',true);case 9:if(!(response.status===400)){_context32.next=11;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 11:if(!(response.status===404)){_context32.next=13;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 13:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 14:case'end':return _context32.stop();}}},_callee32,_this2)}));return function(){return _ref33.apply(this,arguments)}}();_this.requestPublicUsersInformation=function(){var _ref34=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee33(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee33$(_context33){while(1){switch(_context33.prev=_context33.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({ids:_joiBrowser2.default.string(),login:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context33.next=4;return _this.request(_this.url+'users/profiles',options);case 4:response=_context33.sent;if(!response.ok){_context33.next=10;break}_context33.next=8;return response.json();case 8:json=_context33.sent;return _context33.abrupt('return',json);case 10:if(!(response.status===400)){_context33.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context33.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context33.stop();}}},_callee33,_this2)}));return function(){return _ref34.apply(this,arguments)}}();_this.setNewEmailUsingEmailToken=function(){var _ref35=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee34(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee34$(_context34){while(1){switch(_context34.prev=_context34.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({token:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'PUT',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context34.next=5;return _this.request(_this.url+'users/change-email/'+params.token,options);case 5:response=_context34.sent;if(!response.ok){_context34.next=11;break}_context34.next=9;return response.json();case 9:json=_context34.sent;return _context34.abrupt('return',json);case 11:if(!(response.status===400)){_context34.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context34.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context34.stop();}}},_callee34,_this2)}));return function(){return _ref35.apply(this,arguments)}}();_this.setNewPasswordUsingPasswordToken=function(){var _ref36=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee35(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee35$(_context35){while(1){switch(_context35.prev=_context35.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({token:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'PUT',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context35.next=4;return _this.request(_this.url+'users/change-password/'+params.token,options);case 4:response=_context35.sent;if(!response.ok){_context35.next=10;break}_context35.next=8;return response.json();case 8:json=_context35.sent;return _context35.abrupt('return',json);case 10:if(!(response.status===400)){_context35.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context35.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context35.stop();}}},_callee35,_this2)}));return function(){return _ref36.apply(this,arguments)}}();_this.setNewPasswordUsingResetToken=function(){var _ref37=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee36(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee36$(_context36){while(1){switch(_context36.prev=_context36.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({token:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string(),password:_joiBrowser2.default.string().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'PUT',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context36.next=4;return _this.request(_this.url+'users/reset-password/'+params.token,options);case 4:response=_context36.sent;if(!response.ok){_context36.next=10;break}_context36.next=8;return response.json();case 8:json=_context36.sent;return _context36.abrupt('return',json);case 10:if(!(response.status===400)){_context36.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context36.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context36.stop();}}},_callee36,_this2)}));return function(){return _ref37.apply(this,arguments)}}();_this.setSegmentOptionByToken=function(){var _ref38=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee37(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response;return regeneratorRuntime.wrap(function _callee37$(_context37){while(1){switch(_context37.prev=_context37.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({segmentOptionId:_joiBrowser2.default.number().integer().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context37.next=5;return _this.request(_this.url+'users/segment-option/'+params.segmentOptionId,options);case 5:response=_context37.sent;if(!response.ok){_context37.next=8;break}return _context37.abrupt('return',true);case 8:if(!(response.status===400)){_context37.next=10;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 10:if(!(response.status===404)){_context37.next=12;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 12:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 13:case'end':return _context37.stop();}}},_callee37,_this2)}));return function(){return _ref38.apply(this,arguments)}}();_this.setSegmentOptionByUserId=function(){var _ref39=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee38(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response;return regeneratorRuntime.wrap(function _callee38$(_context38){while(1){switch(_context38.prev=_context38.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({userId:_joiBrowser2.default.number().integer().required(),segmentOptionId:_joiBrowser2.default.number().integer().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},params))};_context38.next=5;return _this.request(_this.url+'users/user-segment-option/'+params.userId+'/'+params.segmentOptionId,options);case 5:response=_context38.sent;if(!response.ok){_context38.next=8;break}return _context38.abrupt('return',true);case 8:if(!(response.status===400)){_context38.next=10;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 10:if(!(response.status===404)){_context38.next=12;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 12:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 13:case'end':return _context38.stop();}}},_callee38,_this2)}));return function(){return _ref39.apply(this,arguments)}}();_this.signinSignupViaAuthClient=function(){var _ref40=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee39(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,response,json;return regeneratorRuntime.wrap(function _callee39$(_context39){while(1){switch(_context39.prev=_context39.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({clientName:_joiBrowser2.default.string().required(),token:_joiBrowser2.default.string().required(),scope:_joiBrowser2.default.string(),segmentOptionId:_joiBrowser2.default.number().integer(),subscription:_joiBrowser2.default.boolean(),locale:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(params.segmentOptionId){data.segmentoption_id=params.segmentOptionId}if(!params.locale){data.locale='en'}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data,{access_token:params.token}))};_context39.next=7;return _this.request(_this.url+'users/auth-client/'+params.clientName,options);case 7:response=_context39.sent;if(!response.ok){_context39.next=13;break}_context39.next=11;return response.json();case 11:json=_context39.sent;return _context39.abrupt('return',json);case 13:if(!(response.status===400)){_context39.next=15;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 15:if(!(response.status===404)){_context39.next=17;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 17:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 18:case'end':return _context39.stop();}}},_callee39,_this2)}));return function(){return _ref40.apply(this,arguments)}}();_this.subscribeUserToNewsletters=function(){var _ref41=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee40(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var data,options,requestString,response;return regeneratorRuntime.wrap(function _callee40$(_context40){while(1){switch(_context40.prev=_context40.next){case 0:_joiBrowser2.default.validate(_this.token,_joiBrowser2.default.string().required(),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(_this.messages.tokenIsNotDefined)}});_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({segmentOptionId:_joiBrowser2.default.number().integer().required(),locale:_joiBrowser2.default.string()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});data=_extends({},params);if(!params.locale){data.locale='en'}options={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded',Accept:'application/json'},body:_urlencode2.default.stringify(_extends({},data))};requestString=!!params.locale?_this.url+'users/subscribe/'+params.segmentOptionId+'/'+params.locale:_this.url+'users/subscribe/'+params.segmentOptionId+'/en';_context40.next=8;return _this.request(requestString,options);case 8:response=_context40.sent;if(!response.ok){_context40.next=11;break}return _context40.abrupt('return',true);case 11:if(!(response.status===400)){_context40.next=13;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 13:if(!(response.status===404)){_context40.next=15;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 15:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 16:case'end':return _context40.stop();}}},_callee40,_this2)}));return function(){return _ref41.apply(this,arguments)}}();_this.requestUserTokenInformation=function(){var _ref42=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee41(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var options,response,json;return regeneratorRuntime.wrap(function _callee41$(_context41){while(1){switch(_context41.prev=_context41.next){case 0:_joiBrowser2.default.validate(params,_joiBrowser2.default.object().keys({token:_joiBrowser2.default.string().required()}),function(error){if(error){throw new _tmServiceApi.ErrorBadRequest(error.message)}});options={method:'GET',headers:{'Content-Type':'application/json',Accept:'application/json'},data:_extends({},params)};_context41.next=4;return _this.request(_this.url+'user-tokens/'+params.token,options);case 4:response=_context41.sent;if(!response.ok){_context41.next=10;break}_context41.next=8;return response.json();case 8:json=_context41.sent;return _context41.abrupt('return',json);case 10:if(!(response.status===400)){_context41.next=12;break}throw new _tmServiceApi.ErrorBadRequest(_this.messages.badRequest);case 12:if(!(response.status===404)){_context41.next=14;break}throw new _tmServiceApi.ErrorNotFound(_this.messages.notFound);case 14:throw new _tmServiceApi.ErrorServerResponse(response.status,response.statusText);case 15:case'end':return _context41.stop();}}},_callee41,_this2)}));return function(){return _ref42.apply(this,arguments)}}();_this.messages={tokenIsNotDefined:'token is not defined',incorrectRequestParameter:'incorrect request parameter',noRequiredParameter:'no request parameter',badRequest:'bad request error',notFound:'user not found'};return _this}/**
   * @description User - Request public user information by user id
   * @method getUserById
   * @async
   * @public
   * @memberof UsersService
   * @param  {number} userId - User ID
   * @return {user} - User profile
   * @example <caption>Get user profile by Id</caption>
   * (async () => {
   *   const users = new UsersService('//api.templatemonsterdev.com/users/v1/');
   *   const profile = await users.getUserById(1);
   * })();
   *//**
   * @description Request authenticated user information
   * @method requestAuthenticatedUserInformation
   * @async
   * @public
   * @memberof UsersService
   * @param  {object} data - any expand
   * @return {user} - Current user profile
   * @example <caption>Get current user profile</caption>
   * (async () => {
   *   const users = new UsersService('//api.templatemonsterdev.com/users/v1/');
   *   const profile = await users.getProfile(true);
   * })();
   *//**
   * Update url to match our CDN policy
   * @method updateURLs
   * @memberof UsersService
   * @private
   * @param  {user} user - user profile
   * @return {user} - user profile with updated urls
   */// AuthClient
/**
   * @description AuthClient - Get list of users AuthClient
   * @memberof UsersService
   * @method getListOfUsersAuthClient
   * @async
   * @public
   * @param {Object} params
   * @param {number} params.userId - ID of user
   * @param {number} params.page - Page number
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.getListOfUsersAuthClient({
   *     userId: 12940,
   *     page: 1,
   *   });
   * })();
   * @returns {Promise.<listOfUsers>}
   *//**
   * @description AuthClient - Link AuthClient to user
   * @memberof UsersService
   * @method linkAuthClientToUser
   * @async
   * @public
   * @param {Object} params
   * @param {String} params.userId - users id in AuthClient.
   * @param {String} params.client - AuthClient name(facebook, google etc.).
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.linkAuthClientToUser({
   *     userId: '12940',
   *     client: 'John',
   *   });
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description AuthClient - Request AuthClient information
   * @memberof UsersService
   * @method requestAuthClientInformation
   * @async
   * @public
   * @param {Number} id - users id in AuthClient.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.requestAuthClientInformation(12940);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description AuthClient - Unlink AuthClient from user
   * @memberof UsersService
   * @method unlinkAuthClientFromUser
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.id - users AuthClient unique ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.unlinkAuthClientFromUser(params);
   * })();
   * @returns {Boolean}
   */// Cities
/**
   * @description Cities - Get cities by ip addresses
   * @memberof UsersService
   * @method getCitiesByIpAddresses
   * @async
   * @public
   * @param {array} ips - IP addresses.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getCitiesByIpAddresses(["192.168.2.59"]);
   * })();
   * @returns {Promise.<cityInfo>}
   *//**
   * @description Cities - Get cities by zip and country code
   * @memberof UsersService
   * @method getCitiesByZipAndCountryCode
   * @async
   * @public
   * @param {String} zip - Zip code.
   * @param {countryCode} zip - Country code (2 chars, optional).
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getCitiesByZipAndCountryCode({zip:'02070'});
   * })();
   * @returns {Promise.<cityInfo>}
   *//**
   * @description Cities - Get cities by zip codes
   * @memberof UsersService
   * @method getCitiesByZipCodes
   * @async
   * @public
   * @param {array} zips - Zip codes.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getCitiesByZipCodes(["54000"]);
   * })();
   * @returns {Promise.<cityInfo>}
   *//**
   * @description Cities - Get city by ip address
   * @memberof UsersService
   * @method getCityByIpAddress
   * @async
   * @public
   * @param {String} ip - IP address.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getCityByIpAddress('192.168.2.59');
   * })();
   * @returns {Promise.<cityInfo>}
   */// Countries
/**
   * @description Countries - Get list of countries
   * @memberof UsersService
   * @method getListOfCountries
   * @async
   * @public
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getListOfCountries();
   * })();
   * @returns {Promise.<countriesInfo>}
   */// SegmentOptions
/**
   * @description SegmentOptions - Get list of segment options
   * @memberof UsersService
   * @method getListOfSegmentOptions
   * @async
   * @public
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getListOfSegmentOptions();
   * })();
   * @returns {Promise.<segmentOptionsInfo>}
   */// Segments
/**
   * @description Segments - Get list of segments
   * @memberof UsersService
   * @method getListOfSegments
   * @async
   * @public
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getListOfSegments();
   * })();
   * @returns {Promise.<segmentOptionsInfo>}
   */// StateProvinces
/**
   * @description StateProvinces - Get list of state provinces
   * @memberof UsersService
   * @method getListOfStateProvinces
   * @async
   * @public
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getListOfStateProvinces();
   * })();
   * @returns {Promise.<segmentOptionsInfo>}
   */// User
/**
   * @description User - Add new user
   * @memberof UsersService
   * @method addNewUser
   * @async
   * @public
   * @param {object} params
   * @param {String} params.login - User login
   * @param {String} params.password - User password
   * @param {Boolean} params.subscription - Subscribe user to newsletter
   * @param {String} params.locale - 2 char locale (if not specified default 'en' will be used)
   * @param {String} params.country - Country code (2 chars)
   * @param {String} params.state - State code (2 chars)
   * @param {Number} params.segmentoptionId - Subscription segment option (if not specified default 4 will be used)
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.addNewUser({
   *     login: 'qweqwe@qwe.qwe',
   *     password: 'qweqwe',
   *     segmentoption_id: 4
   *   });
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Confirm email
   * @memberof UsersService
   * @method confirmEmail
   * @async
   * @public
   * @param {object} params
   * @param {String} params.token - User confirm email token.
   * @param {String} params.scope - List of oauth scopes divided by space (optional).
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.confirmEmail(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Get link for avatar upload
   * @memberof UsersService
   * @method getLinkForAvatarUpload
   * @async
   * @public
   * @param {object} params
   * @param {String} params.file - Avatar file name.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.getLinkForAvatarUpload(params);
   * })();
   * @returns {Promise.<imageLink>}
   *//**
   * @description User - Get list of users
   * @memberof UsersService
   * @method getListOfUsers
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.page - Page number.
   * @param {Number} params.perPage	 - Number of users in one page.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.getListOfUsers(params);
   * })();
   * @returns {Promise.<imageLink>}
   *//**
   * @description User - Get pagination metadata for Users {get} /users api call
   * @memberof UsersService
   * @method getPaginationMetadata
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.id - users AuthClient unique ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.getPaginationMetadata();
   * })();
   * @returns {Promise.<paginationData>}
   *//**
   * @description User - Get segment option for user identified by access token
   * @memberof UsersService
   * @method getSegmentOptionForUserByToken
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.segmentId - Segment ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.getSegmentOptionForUserByToken(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Get segment option for user identified by user id
   * @memberof UsersService
   * @method getSegmentOptionByUserId
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.userId - User ID.
   * @param {Number} params.segmentId - Segment ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.getSegmentOptionByUserId(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Issue access token using refresh token
   * @memberof UsersService
   * @method refreshToken
   * @async
   * @public
   * @param {object} params
   * @param {String} params.refreshToken - Refresh token.
   * @param {String} params.scope - Set of scopes divided by space symbol.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.refreshToken(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Issue access token
   * @method loginProfile
   * @async
   * @public
   * @memberof UsersService
   * @param  {object} params
   * @param  {string} params.login - user email
   * @param  {string} params.password - user password
   * @param  {string} params.scope - user scopes
   * @return {object} - User token information
   * @example <caption>Request Issue access token</caption>
   * (async () => {
   *   const users = new UsersService('//api.templatemonsterdev.com/users/v1/');
   *   const tokenInfo = await users.loginProfile({
   *    login: 'test@test.com',
   *    password: '123123',
   *    scope: 'memberships,services'
   *   });
   * })();
   *//**
   * @description User - Modify authorized user information
   * @memberof UsersService
   * @method modifyAuthorizedUserInformation
   * @async
   * @public
   * @param {object} params
   * @param {String} params.password - User password.
   * @param {String} params.firstname - User first name.
   * @param {String} params.lastname - User last name.
   * @param {String} params.phone - User phone.
   * @param {String} params.avatar - User avatar.
   * @param {Array} params.billingInfo - Billing info array with following fields [firstname, lastname, city, email, postalcode, billingphone, country, state, contactphone, address]
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.modifyAuthorizedUserInformation(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Modify user information by user id
   * @memberof UsersService
   * @method modifyUserInformationByUserId
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.userId - User unique ID.
   * @param {String} params.firstname - User first name.
   * @param {String} params.lastname - User last name.
   * @param {String} params.phone - User phone.
   * @param {Number} params.stateId - User status ID: 1 - Waiting, 2 - Normal, 3 - Disabled, 4 - Without confirm, 5 - With confirm, 6 - Required confirm
   * @param {Array} params.billingInfo - Billing info array with following fields [firstname, lastname, city, email, postalcode, billingphone, country, state, contactphone, address]
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.modifyUserInformationByUserId(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Register confirmed user
   * @memberof UsersService
   * @method registerConfirmedUser
   * @async
   * @public
   * @param {object} params
   * @param {String} params.login - User login.
   * @param {String} params.password - User password.
   * @param {String} params.country - 2 symbol code of country
   * @param {String} params.state - 2 symbol code of state (XX if there are no states in this country)
   * @param {String} params.firstname
   * @param {String} params.lastname
   * @param {Number} params.birthday
   * @param {String} params.phone
   * @param {String} params.website
   * @param {String} params.company
   * @param {String} params.avatar
   * @param {Number} params.sex
   * @param {String} params.expand - List of additional data to be returned, may contain following fields divided by comma - billingInfo, segmentOptions, token(this will create new access token), optional.
   * @param {Boolean} params.sendEmail - Flag that indicates if registration email should be sent, optional.
   * @param {Number} params.segmentOptionId - Id of segment option, optional.
   * @param {String} params.scope - List of oauth scopes divided by space.
   * @param {Array} params.billingInfo - User billing info, optional.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.registerConfirmedUser(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Request User email exist information
   * @memberof UsersService
   * @method requestUserEmailExistInformation
   * @async
   * @public
   * @param {object} params
   * @param {String} params.email - User email. (required)
   * @param {String} params.expand - List of additional data to be returned (e.g. authClients) (optional).
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.requestUserEmailExistInformation(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Request User information by user id
   * @memberof UsersService
   * @method requestUserInformationByUserId
   * @async
   * @public
   * @param {object} params
   * @param {String} params.userId - User unique ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.requestUserInformationByUserId(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Request change email
   * @memberof UsersService
   * @method requestChangeEmail
   * @async
   * @public
   * @param {object} params
   * @param {String} params.email - User email.
   * @param {String} params.locale - email language. (optional, 'en' by default)
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.requestChangeEmail(params);
   * })();
   * @returns {Boolean}
   *//**
   * @description User - Request change password email
   * @memberof UsersService
   * @method requestChangePasswordEmail
   * @async
   * @public
   * @param {object} params
   * @param {String} params.email - User email.
   * @param {String} params.password - New password to set.
   * @param {String} params.locale - email language. (optional, 'en' by default)
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.requestChangePasswordEmail(params);
   * })();
   * @returns {Boolean}
   *//**
   * @description User - Request for password reset email
   * @memberof UsersService
   * @method requestForPasswordResetEmail
   * @async
   * @public
   * @param {object} params
   * @param {String} params.email - User email.
   * @param {String} params.locale - email language. (optional, 'en' by default)
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.requestForPasswordResetEmail(params);
   * })();
   * @returns {Boolean}
   *//**
   * @description User - Request for registration email
   * @memberof UsersService
   * @method requestForRegistrationEmail
   * @async
   * @public
   * @param {object} params
   * @param {String} params.email - User email.
   * @param {String} params.locale - email language. (optional, 'en' by default)
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.requestForRegistrationEmail(params);
   * })();
   * @returns {Boolean}
   *//**
   * @description User - Request public users information based on request params
   * @memberof UsersService
   * @method requestPublicUsersInformation
   * @async
   * @public
   * @param {object} params
   * @param {String} params.ids - search by few id divided by comma (e.g. ?ids=124088,123456)
   * @param {String} params.login - search by e-mail address
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.requestPublicUsersInformation(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Set new email to user using change email token
   * @memberof UsersService
   * @method setNewEmailUsingEmailToken
   * @async
   * @public
   * @param {object} params
   * @param {String} params.token - User change email token.
   * @param {String} params.scope - List of oauth scopes divided by space.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.setNewEmailUsingEmailToken(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Set new password to user using change password token
   * @memberof UsersService
   * @method setNewPasswordToUserUsingChangePasswordToken
   * @async
   * @public
   * @param {object} params
   * @param {String} params.token - User change email token.
   * @param {String} params.scope - List of oauth scopes divided by space.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.setNewPasswordToUserUsingChangePasswordToken(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Set new password to user using reset token
   * @memberof UsersService
   * @method setNewPasswordByResetToken
   * @async
   * @public
   * @param {object} params
   * @param {String} params.token - User change email token.
   * @param {String} params.scope - List of oauth scopes divided by space.
   * @param {String} params.password - List of oauth scopes divided by space.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.setNewPasswordByResetToken(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Set segment option for user identified by access token
   * @memberof UsersService
   * @method setSegmentOptionByToken
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.segmentOptionId - Segment option ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/, token');
   *   const request = await service.setSegmentOptionByToken(params);
   * })();
   * @returns {Boolean}
   *//**
   * @description User - Set segment option for user identified by user id
   * @memberof UsersService
   * @method setSegmentOptionByUserId
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.userId - User ID.
   * @param {Number} params.segmentOptionId - Segment option ID.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/, token');
   *   const request = await service.setSegmentOptionByUserId(params);
   * })();
   * @returns {Boolean}
   *//**
   * @description User - Signin or signup via external auth client
   * @memberof UsersService
   * @method signinSignupViaAuthClient
   * @async
   * @public
   * @param {object} params
   * @param {String} params.clientName - Name of external auth client - facebook, google, etc..
   * @param {String} params.token - OAuth access token from external auth provider.
   * @param {String} params.scope - List of oauth scopes divided by space.
   * @param {Number} params.segmentOptionId - Segment option id.
   * @param {Boolean} params.subscription - Subscribe user to newsletter.
   * @param {String} params.locale - Subscription locale (if not specified default 'en' will be used).
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/');
   *   const request = await service.signinSignupViaAuthClient(params);
   * })();
   * @returns {Promise.<userInfo>}
   *//**
   * @description User - Subscribe user to newsletters
   * @memberof UsersService
   * @method subscribeUserToNewsletters
   * @async
   * @public
   * @param {object} params
   * @param {Number} params.segmentOptionId - Segment option ID.
   * @param {Number} params.locale - Locale.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/, token');
   *   const request = await service.subscribeUserToNewsletters(params);
   * })();
   * @returns {Boolean}
   */// UserToken
/**
   * @description UserToken - Request User Token information
   * @memberof UsersService
   * @method requestUserTokenInformation
   * @async
   * @public
   * @param {Object} params
   * @param {number} params.token - User token string.
   * @example
   * (async () => {
   *   const service = new Service('//api.templatemonsterdev.com/users/v1/', token);
   *   const request = await service.requestUserTokenInformation(params);
   * })();
   * @returns {Promise.<listOfUsers>}
   */return UsersService}(_tmServiceApi.TMMicroServiceAPI);UsersService.updateURL=function(user){return _extends({},user,{avatar:_tmAmazonRename2.default.convert(user.avatar,{w:88,h:88})})};exports.default=UsersService;
//# sourceMappingURL=index.js.map