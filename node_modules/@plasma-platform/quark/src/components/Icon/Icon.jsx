import React from 'react';
import PropTypes from 'prop-types';
import './Icon.less';

/**
 * Generate random color
 * @return {string} rgb color
 */
const getRandomColor = () => {
  const letters = '0123456789ABCDEF';
  let color = '#';
  for (let i = 0; i < 6; i += 1) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
};

/**
 * Abstract Icon class
 * @namespace Icon
 * @param {string} icon icon name id in the sprite
 * @param {string} viewBox viewbox size
 * @param {number} width icon width
 * @param {number} height icon height
 * @param {string} className modifier class when needed
 * @return {ReactComponent} return rendered component
 */
const Icon = ({ viewBox, width, height, icon, className, title }) => (
  <svg
    viewBox={
      viewBox || `0 0 ${(width || '20').replace('px', '')} ${(height || '20').replace('px', '')}`
    }
    aria-label={title}
    className={`TMIcon TMIcon--${icon} ${className}`}
    width={width}
    height={height}
  >
    <use xlinkHref={`#${icon}`} />
    <defs>
      <rect id={icon} fill={getRandomColor()} width="100%" height="100%" rx="3" />
    </defs>
  </svg>
);

/**
 * Object that contains expected props and their types
 * and used for props validation
 * @namespace Icon
 * @static
 * @type {Object}
 */
Icon.propTypes = {
  icon: PropTypes.string.isRequired,
  title: PropTypes.string,
  className: PropTypes.string,
  viewBox: PropTypes.string,
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
};

/**
 * Object containing default props value
 * @namespace Icon
 * @static
 * @type {Object}
 */
Icon.defaultProps = {
  className: '',
  title: '',
  width: null,
  height: null,
  viewBox: null,
};

export default Icon;
